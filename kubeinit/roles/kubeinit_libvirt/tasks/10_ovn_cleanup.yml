---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

##
## Clean OVN resources
##
- name: Clean OVN/OVS resources
  ansible.builtin.shell: |
    set -o pipefail
    ip route del {{ kubeinit_inventory_network_net }}/{{ kubeinit_inventory_network_cidr }} via 172.16.0.1 dev br-ex || true
    ovn-nbctl --if-exists ls-del sw0 || true
    ovn-nbctl --if-exists lr-del lr0 || true
    ovn-nbctl --if-exists ls-del public || true
    ovs-vsctl --if-exists del-br br-int || true
    ovs-vsctl --if-exists del-br br-ex || true
    ip link del genev_sys_6081 || true
    ovs-dpctl del-dp ovs-system || true
  args:
    executable: /bin/bash
  register: _result
  changed_when: "_result.rc == 0"
  with_items:
    - "{{ groups['all_hosts'] | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
  when: >
    kubeinit_libvirt_destroy_nets|bool and not kubeinit_libvirt_multicluster_keep_predefined_networks

- name: Stop and disable OVN services in the first hypervisor (CentOS based)
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped
    enabled: false
  register: _result_stop_service
  failed_when: _result_stop_service is not defined
  with_items:
    - "{{ groups['all_hosts'] | product(['openvswitch', 'ovn-northd', 'ovn-controller']) | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item[0] }}"
    service_name: "{{ cluster_role_item[1] }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'CentOS' or hostvars[kubeinit_deployment_node_name].distribution_family == 'Fedora')

- name: Stop and disable OVN services in the rest of the hypervisors (CentOS based)
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped
    enabled: false
  register: _result_stop_service
  failed_when: _result_stop_service is not defined
  with_items:
    - "{{ groups['all_hosts'] | product(['openvswitch', 'ovn-controller']) | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item[0] }}"
    service_name: "{{ cluster_role_item[1] }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'CentOS' or hostvars[kubeinit_deployment_node_name].distribution_family == 'Fedora')

- name: Stop and disable OVN services in the first hypervisor (Ubuntu based)
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped
    enabled: false
  register: _result_stop_service
  failed_when: _result_stop_service is not defined
  with_items:
    - "{{ groups['all_hosts'] | product(['ovs-vswitchd', 'ovn-central', 'ovn-controller']) | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item[0] }}"
    service_name: "{{ cluster_role_item[1] }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
  when: >
    (kubeinit_deployment_node_name in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')

- name: Stop and disable OVN services in the rest of the hypervisors (Ubuntu based)
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped
    enabled: false
  register: _result_stop_service
  failed_when: _result_stop_service is not defined
  with_items:
    - "{{ groups['all_hosts'] | product(['ovs-vswitchd', 'ovn-controller']) | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item[0] }}"
    service_name: "{{ cluster_role_item[1] }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
  when: >
    (kubeinit_deployment_node_name not in kubeinit_ovn_central_host) and
    (hostvars[kubeinit_deployment_node_name].distribution_family == 'Debian')

- name: Delete existing OVS/OVN files
  ansible.builtin.file:
    path: "{{ dir_name }}"
    state: absent
  with_items:
    - "{{ groups['all_hosts'] | product(['/etc/openvswitch/conf.db', '/etc/openvswitch/system-id.conf', '/var/lib/ovn/']) | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item[0] }}"
    dir_name: "{{ cluster_role_item[1] }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
