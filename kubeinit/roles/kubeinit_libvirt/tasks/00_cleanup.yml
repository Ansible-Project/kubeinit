---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

##
## Cleanup tasks
##
- name: Cleanup the environment
  block:

    ##
    ## Clean networks
    ##

    - name: Destroy deployment networks
      community.libvirt.virt_net:
        command: destroy
        name: "{{ item.name }}"
      with_items: "{{ kubeinit_libvirt_cluster_nets }}"
      ignore_errors: true
      when: kubeinit_libvirt_destroy_nets|bool and not kubeinit_libvirt_multicluster_keep_predefined_networks

    - name: Undefine deployment networks
      community.libvirt.virt_net:
        command: undefine
        name: "{{ item.name }}"
      with_items: "{{ kubeinit_libvirt_cluster_nets }}"
      ignore_errors: true
      when: kubeinit_libvirt_destroy_nets|bool and not kubeinit_libvirt_multicluster_keep_predefined_networks

    ##
    ## Clean VMs
    ##

    - name: Destroy vms
      community.libvirt.virt:
        name: "{{ item }}"
        command: destroy
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
      ignore_errors: true

    - name: Undefine vms
      community.libvirt.virt:
        name: "{{ item }}"
        command: undefine
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
      ignore_errors: true

    - name: Remove VMs storage
      ansible.builtin.file:
        state: absent
        path: "{{ kubeinit_libvirt_target_image_dir }}/{{ item }}.qcow2"
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"

    ##
    ## Clean folders
    ##

    - name: Clean directories for config files per node
      ansible.builtin.file:
        state: absent
        path: "{{ kubeinit_libvirt_hypervisor_tmp_dir }}/{{ item }}/"
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"

    ##
    ## Clean keys
    ##

    - name: check if /root/.ssh/known_hosts exists
      ansible.builtin.stat:
        path: /root/.ssh/known_hosts
      register: known_hosts_file

    - name: Reset ssh keys in hypervisor
      ansible.builtin.shell: |
        ssh-keygen -R  {{ item }}
        ssh-keygen -R  {{ item }}.{{ kubeinit_inventory_cluster_domain }}
        ssh-keygen -R  {{ hostvars[item].ansible_host }}
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
      when: known_hosts_file.stat.exists | bool
      ignore_errors: true
      changed_when: false

    - name: reset local ssh keys
      become: no
      delegate_to: localhost
      ansible.builtin.shell: |
        ssh-keygen -R  {{ item }}
        ssh-keygen -R  {{ item }}.{{ kubeinit_inventory_cluster_domain }}
        ssh-keygen -R  {{ hostvars[item].ansible_host }}
      ignore_errors: true
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
      changed_when: false

    - name: Delete keys in ~/.ssh/known_hosts
      ansible.builtin.lineinfile:
        dest: ~/.ssh/known_hosts
        state: absent
        regexp: '{{ hostvars[item].ansible_host }}'
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
