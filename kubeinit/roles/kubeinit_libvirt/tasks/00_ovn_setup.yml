---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

##
## OVN setup in the Hypervisors.
##

- name: Set up the OVN network details
  block:

    - name: configure OVN in the first Hypervisor
      ansible.builtin.shell: |
        CENTRAL_IP={{ hostvars[groups['hypervisor_nodes'][0]]['ansible_default_ipv4']['address'] }} # This is the IP of the first HV
        LOCAL_IP={{ hostvars[kubeinit_deployment_node_name]['ansible_default_ipv4']['address'] }} # This is the IP of the current HV
        ENCAP_TYPE={{ kubeinit_libvirt_ovn_encapsulation }}
        sudo ovs-vsctl set Open_vSwitch . \
            external_ids:ovn-remote="tcp:$CENTRAL_IP:{{ kubeinit_libvirt_ovn_southbound_port }}" \
            external_ids:ovn-nb="tcp:$CENTRAL_IP:{{ kubeinit_libvirt_ovn_northbound_port }}" \
            external_ids:ovn-encap-ip=$LOCAL_IP \
            external_ids:ovn-encap-type="$ENCAP_TYPE" \
            external_ids:system-id="{{ kubeinit_deployment_node_name }}" \
            external-ids:ovn-bridge-mappings=kubeinit-ovn-net:kimgtbr0

        # Below two commands only for master. For SSL, other steps are required.
        sudo ovn-nbctl set-connection ptcp:{{ kubeinit_libvirt_ovn_northbound_port }}
        sudo ovn-sbctl set-connection ptcp:{{ kubeinit_libvirt_ovn_southbound_port }}
      when: >
        groups['hypervisor_nodes'][0] in kubeinit_deployment_node_name

    - name: configure OVN in the rest of the Hypervisors
      ansible.builtin.shell: |
        CENTRAL_IP={{ hostvars[groups['hypervisor_nodes'][0]]['ansible_default_ipv4']['address'] }} # This is the IP of the first HV
        LOCAL_IP={{ hostvars[kubeinit_deployment_node_name]['ansible_default_ipv4']['address'] }} # This is the IP of the current HV
        ENCAP_TYPE={{ kubeinit_libvirt_ovn_encapsulation }}
        sudo ovs-vsctl set Open_vSwitch . \
            external_ids:ovn-remote="tcp:$CENTRAL_IP:{{ kubeinit_libvirt_ovn_southbound_port }}" \
            external_ids:ovn-nb="tcp:$CENTRAL_IP:{{ kubeinit_libvirt_ovn_northbound_port }}" \
            external_ids:ovn-encap-ip=$LOCAL_IP \
            external_ids:ovn-encap-type="$ENCAP_TYPE" \
            external_ids:system-id="{{ kubeinit_deployment_node_name }}" \
            external-ids:ovn-bridge-mappings=kubeinit-ovn-net:kimgtbr0

      when: >
        kubeinit_deployment_node_name in groups['hypervisor_nodes'][1:] and
        groups['hypervisor_nodes'] | length > 1

    - name: remove the cluster switch if exists
      ansible.builtin.shell: |
        ovn-nbctl ls-del {{ kubeinit_libvirt_ovn_switch }}
      ignore_errors: True
      when: >
        groups['hypervisor_nodes'][0] in kubeinit_deployment_node_name

    - name: create the cluster switch
      ansible.builtin.shell: |
        # Create a logical switch
        ovn-nbctl ls-add {{ kubeinit_libvirt_ovn_switch }}
      when: >
        groups['hypervisor_nodes'][0] in kubeinit_deployment_node_name

    - name: create the nodes ports
      ansible.builtin.shell: |
        # Create the port
        ovn-nbctl lsp-add {{ kubeinit_libvirt_ovn_switch }} {{ item }}
        # Set the port address
        ovn-nbctl lsp-set-addresses {{ item }} "{{ hostvars[item].mac }} {{ hostvars[item].ansible_host }}"
        # Set port security
        ovn-nbctl lsp-set-port-security {{ item }} {{ hostvars[item].mac }}
        # Bind the created port to a chassis
        ovn-sbctl lsp-bind {{ item }} {{ hostvars[item].target }}
      with_items:
        - "{{ groups['all'] | map('regex_search','^((?!hypervisor).)*$') | select('string') | list }}"
      when: >
        groups['hypervisor_nodes'][0] in kubeinit_deployment_node_name

    # When the deployment finishes, it shuold be possible to see the available chassis and ports by running:
    # ovn-nbctl show
    # ovn-sbctl show
    # ovs-vsctl show
