---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


#
# "kubeinit_openstack" tasks
#

- name: Run the deployment tasks in each extra node (those extra nodes having the 'nova' string)
  block:

    - name: Install CentOS based OpenStack dependencies
      ansible.builtin.package:
        name: "{{ kubeinit_openstack_dependencies }}"
        state: present

    - name: Create the stack user
      ansible.builtin.shell: |
        set -o pipefail

        sudo useradd stack
        echo "stack:stack" | sudo chpasswd
        echo "stack ALL=(root) NOPASSWD:ALL" \
          | sudo tee /etc/sudoers.d/stack
        sudo chmod 0440 /etc/sudoers.d/stack
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"

    - name: Install repos and packages
      ansible.builtin.shell: |
        set -o pipefail

        dnf install -y https://trunk.rdoproject.org/centos9-master/component/tripleo/current-tripleo/python3-tripleo-repos-0.1.1-0.20220620133357.8321b3f.el9.noarch.rpm
        tripleo-repos current-tripleo-dev
        dnf install -y python3-tripleoclient
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"

    - name: Update packages
      ansible.builtin.package:
        name: "*"
        state: latest

    - name: Reboot immediately after the package update
      ansible.builtin.shell: "sleep 5 && reboot"
      args:
        executable: /bin/bash
      async: 1
      poll: 0
      changed_when: true

    - name: Confirm that we have ansible host connectivity
      ansible.builtin.ping:

    - name: Render the containers-prepare-parameters template
      ansible.builtin.shell: |
        set -o pipefail

        su - stack
        sudo openstack tripleo container image prepare default --output-env-file $HOME/containers-prepare-parameters.yaml
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"

    - name: Build the standalone_parameters template
      ansible.builtin.shell: |
        set -o pipefail

        su - stack

        export IP=10.0.0.4
        export VIP=10.0.0.5
        export NETMASK=24
        export GATEWAY=10.0.0.254
        export INTERFACE=eth0

        cat <<EOF > $HOME/standalone_parameters.yaml
        parameter_defaults:
          CloudName: $IP
          # default gateway
          ControlPlaneStaticRoutes:
            - ip_netmask: 0.0.0.0/0
              next_hop: $GATEWAY
              default: true
          Debug: true
          DeploymentUser: $USER
          DnsServers:
            - 10.38.5.26 # TODO:FIXME: Check the fact having this information
            - 10.0.0.253
          # needed for vip & pacemaker
          KernelIpNonLocalBind: 1
          DockerInsecureRegistryAddress:
            - $IP:8787
          NeutronPublicInterface: $INTERFACE
          # domain name used by the host
          CloudDomain: localdomain
          NeutronDnsDomain: localdomain
          # re-use ctlplane bridge for public net, defined in the standalone
          # net config (do not change unless you know what you are doing)
          NeutronBridgeMappings: datacentre:br-ctlplane
          NeutronPhysicalBridge: br-ctlplane
          # enable to force metadata for public net
          #NeutronEnableForceMetadata: true
          StandaloneEnableRoutedNetworks: false
          StandaloneHomeDir: $HOME
          InterfaceLocalMtu: 1342
          # Needed if running in a VM, not needed if on baremetal
          NovaComputeLibvirtType: qemu
          NtpServer: 10.11.160.238
          ChronyAclRules:
            - allow 10.0.0.0/24
        EOF

        # If there are deployment issues related to chrony
        # make sure the following works.
        # [root@nova-compute ~]# cat /etc/chrony.conf
        # # Do not manually edit this file.
        # # Managed by ansible-role-chrony
        # server 10.11.160.238 iburst minpoll 6 maxpoll 10
        # bindcmdaddress 127.0.0.1
        # bindcmdaddress ::1
        # allow 10.0.0.0/24
        # driftfile /var/lib/chrony/drift
        # logdir /var/log/chrony
        # rtcsync
        # makestep 1.0 3
        # [root@nova-compute ~]# chronyc sources
        # MS Name/IP address         Stratum Poll Reach LastRx Last sample
        # ===============================================================================
        # ^* 10.11.160.238                 2   6   377    63    +10us[  +33us] +/- 9708us
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"

    - name: Deploy ooo standalone in the Nova compute node
      ansible.builtin.shell: |
        set -o pipefail

        su - stack

        export IP=10.0.0.4
        export VIP=10.0.0.5
        export NETMASK=24
        export GATEWAY=10.0.0.254
        export INTERFACE=eth0

        sudo openstack tripleo deploy \
          --templates \
          --local-ip=$IP/$NETMASK \
          --control-virtual-ip=$VIP \
          -e /usr/share/openstack-tripleo-heat-templates/environments/standalone/standalone-tripleo.yaml \
          -r /usr/share/openstack-tripleo-heat-templates/roles/Standalone.yaml \
          -e $HOME/containers-prepare-parameters.yaml \
          -e $HOME/standalone_parameters.yaml \
          -e /usr/share/openstack-tripleo-heat-templates/environments/low-memory-usage.yaml \
          --output-dir $HOME
      args:
        executable: /bin/bash
      async: 600
      poll: 0
      register: _ooo_deployment
      changed_when: true

    - name: Check on ooo standalone
      ansible.builtin.async_status:
        jid: "{{ _ooo_deployment.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 100
      delay: 300

    - name: Confirm that we have ansible host connectivity
      ansible.builtin.ping:

    - name: Get the deployed standalone endpoints
      ansible.builtin.shell: |
        set -o pipefail
        sudo su - stack
        export OS_CLOUD=standalone
        openstack endpoint list
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
