---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Create Bind folder
  ansible.builtin.file:
    path: "{{ kubeinit_bind_directory }}"
    state: directory
    recurse: yes
    mode: '0755'

- name: Create named.conf
  ansible.builtin.template:
    src: "named.conf.j2"
    dest: "{{ kubeinit_bind_directory }}/named.conf"
    mode: '0644'

- name: Create named.conf.local
  ansible.builtin.template:
    src: "named.conf.local.j2"
    dest: "{{ kubeinit_bind_directory }}/named.conf.local"
    mode: '0644'

- name: Create script to provide external access to the cluster through the bastion host
  ansible.builtin.template:
    src: "create-external-ingress.sh.j2"
    dest: "~/create-external-ingress.sh"
    mode: '0644'
  delegate_to: "{{ kubeinit_bastion_host }}"

- name: Create BIND zones directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    recurse: yes
  with_items:
    - "{{ kubeinit_bind_directory }}/zones/internals"

- name: Create BIND db internal subnet
  ansible.builtin.template:
    src: "internals_db.j2"
    dest: "{{ kubeinit_bind_directory }}/zones/internals/db.{{ kubeinit_inventory_network_net }}"
    mode: '0644'

- name: Create BIND db internal zone
  ansible.builtin.template:
    src: "internals_db.local.j2"
    dest: "{{ kubeinit_bind_directory }}/zones/internals/db.{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
    mode: '0644'

- name: Create a podman container to serve the Bind server
  containers.podman.podman_container:
    name: "{{ kubeinit_bind_service_name }}"
    image: docker.io/internetsystemsconsortium/bind9:9.11
    pod: "{{ kubeinit_deployment_node_name }}-pod"
    state: stopped
    volumes:
      - "{{ kubeinit_bind_directory }}/named.conf:/etc/bind/named.conf"
      - "{{ kubeinit_bind_directory }}/:/etc/bind/kubeinit/:Z"
  register: bind_podman_container_info

- name: Setting Podman facts about the container that will run the bind
  ansible.builtin.set_fact:
    container_bind_name: "{{ bind_podman_container_info.container.Name }}"
    container_bind_pidfile: "{{ bind_podman_container_info.container.ConmonPidFile }}"

- name: Create systemd service for podman container
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_services"
    tasks_from: create_managed_service
    public: true
  vars:
    kubeinit_services_systemd_service_name: "{{ kubeinit_bind_service_name }}"
    kubeinit_services_podman_container_name: "{{ container_bind_name }}"
    kubeinit_services_podman_container_pidfile: "{{ container_bind_pidfile }}"
