---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Configure the service node
  block:

    - name: Prepare podman
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_prepare
        tasks_from: prepare_podman
        public: yes

    - name: Create a minimal podman pod for the service containers running on service node VMs
      containers.podman.podman_pod:
        name: "{{ kubeinit_deployment_node_name }}-pod"
        network: host
        dns:
          - "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
          - "{{ kubeinit_common_dns_public }}"
        dns_search: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
        state: created
      register: services_pod_creation
      retries: 5
      delay: 10
      until: not services_pod_creation.failed

    - name: Prepare credentials for services
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_services
        tasks_from: prepare_credentials.yml
        public: true

    # #
    # # Configure local registry
    # #
    #
    # - name: Configure a local container image registry
    #   delegate_to: "{{ groups['all_service_nodes'][0] }}"
    #   ansible.builtin.import_role:
    #     name: ../../roles/kubeinit_registry
    #     tasks_from: main
    #   when: kubeinit_registry_enabled|bool

    #
    # Configure bind
    #

    - name: Configure Bind
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_bind
        tasks_from: main

    #
    # Configure HAproxy
    #

    - name: Configure HAProxy
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_haproxy
        tasks_from: main

    #
    # Configure httpd
    #

    - name: Configure Apache
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_apache
        tasks_from: main

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
