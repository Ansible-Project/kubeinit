---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Deploy the cluster service node
  ansible.builtin.include_role:
    name: ../../roles/kubeinit_libvirt
    tasks_from: 60_deploy_centos_guest.yml
    public: yes

- name: Delegate to cluster service node
  block:

    - name: "Render net info"
      ansible.builtin.shell: |
        set -o pipefail
        echo "{{ kubeinit_okd_pod_cidr }}" > ~/pod_cidr
        echo "{{ kubeinit_okd_service_cidr }}" > ~/service_cidr
      args:
        executable: /bin/bash
      register: render_net_info
      changed_when: "render_net_info.rc == 0"

    - name: Add the local DNS server as a local resolver
      ansible.builtin.lineinfile:
        path: /etc/resolv.conf
        line: "nameserver {{ kubeinit_bind_service_address }}"
        insertbefore: nameserver.*

    - name: Install services requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_okd_service_dependencies }}"
        state: present
        use_backend: dnf

    - name: Resize root partition
      ansible.builtin.shell: |
        echo 'Reclaim space for root partition'
        growpart /dev/vda 1
        xfs_growfs /dev/vda1
      changed_when: false

    - name: Prepare podman
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_prepare
        tasks_from: prepare_podman
        public: true

    - name: Create a minimal podman pod for the service containers
      containers.podman.podman_pod:
        name: "{{ kubeinit_deployment_node_name }}-pod"
        network: host
        dns:
          - "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
          - "{{ kubeinit_common_dns_public }}"
        dns_search: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
        state: created
      register: services_pod_creation
      retries: 5
      delay: 10
      until: not services_pod_creation.failed

    - name: Prepare credentials for services
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_services
        tasks_from: prepare_credentials.yml
        public: true

    - name: Start services containers
      ansible.builtin.include_role:
        name: ../../roles/kubeinit_services
        tasks_from: start_services_containers.yml
        public: true

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"

- name: Configure the cluster service node
  ansible.builtin.include_role:
    name: ../../roles/kubeinit_okd
    tasks_from: configure_service_nodes.yml
    public: yes
