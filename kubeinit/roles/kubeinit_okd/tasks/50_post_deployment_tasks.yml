---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Configure the post deployment tasks
  block:
    - name: "verify that all the csr are loaded and aproved for the deployed nodes"
      ansible.builtin.shell: |
        set -o pipefail
        export KUBECONFIG=~/install_dir/auth/kubeconfig; \
        oc get csr -ojson | jq -r '.items[] | .metadata.name' | xargs oc adm certificate approve >/dev/null 2>&1; \
        oc get csr | grep Approved
      args:
        executable: /bin/bash
      register: cmd_res
      changed_when: "cmd_res.rc == 0"
      retries: 60
      delay: 60
      # Per each node we have 2 certs one per kubelet-serving and another per kube-apiserver-client-kubelet
      until: cmd_res.stdout_lines | default([]) | list | count == ( groups['all_control_plane_nodes'] | count + groups['all_compute_nodes'] | count ) * 2

    - name: "wait until all nodes are ready"
      ansible.builtin.shell: |
        set -o pipefail
        export KUBECONFIG=~/install_dir/auth/kubeconfig; \
        oc get nodes | grep " Ready"
      args:
        executable: /bin/bash
      register: cmd_res
      changed_when: "cmd_res.rc == 0"
      retries: 60
      delay: 60
      until: cmd_res.stdout_lines | default([]) | list | count == ( (groups['all_control_plane_nodes'] | count) + (groups['all_compute_nodes'] | count) )

    - name: Copy the kubeconfig
      ansible.builtin.shell: |
        cp ~/install_dir/auth/kubeconfig ~/.kube/config
      register: copy_kubeconfig
      changed_when: "copy_kubeconfig.rc == 0"

    - name: Get some final cluster information
      ansible.builtin.shell: |
        set -o pipefail
        set -e
        echo "show stat" | socat unix-connect:/var/lib/haproxy/stats stdio
        export KUBECONFIG=~/install_dir/auth/kubeconfig
        oc get nodes
      args:
        executable: /bin/bash
      ignore_errors: yes
      register: final_output_info
      changed_when: "final_output_info.rc == 0"

    #
    # Configure NFS
    #
    - name: Configure NFS
      ansible.builtin.include_role:
        name: "../../roles/kubeinit_nfs"
        public: true
      when: "'nfs' in kubeinit_cluster_hostvars.services"

    - name: Display final debug info
      ansible.builtin.debug:
        var: final_output_info

    - name: Print some final data
      vars:
        msg: |
          Get the kubeadmin password from the services machine
            cat ~/install_dir/auth/kubeadmin-password
          The OpenShift UI endpoint is:
            console-openshift-console.apps.{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}
      ansible.builtin.debug:
        msg: "{{ msg.split('\n') }}"

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
