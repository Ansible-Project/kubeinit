# This file is rendered using a	template from a KubeInit role
# This file will be overriden each time	the playbook runs
# No not edit directly
# More information at: https://github.com/kubeinit/kubeinit

# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend k8s4_k8s_api_fe
    bind :6443
    default_backend k8s4_k8s_api_be
    mode tcp
    option tcplog

backend k8s4_k8s_api_be
    balance source
    mode tcp
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:6443 check
{% endfor %}

frontend k8s4_machine_config_server_fe
    bind :22623
    default_backend k8s4_machine_config_server_be
    mode tcp
    option tcplog

backend k8s4_machine_config_server_be
    balance source
    mode tcp
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:22623 check
{% endfor %}

frontend k8s4_http_ingress_traffic_fe
    bind :80
    default_backend k8s4_http_ingress_traffic_be
    mode tcp
    option tcplog

backend k8s4_http_ingress_traffic_be
    balance source
    mode tcp
{% if groups['k8s_worker_nodes'] is defined and groups['k8s_worker_nodes']|length > 0 and kubeinit_k8s_disable_masters_schedulable %}
{% for host in groups['k8s_worker_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_worker_nodes'][loop.index - 1]].ansible_host }}:80 check
{% endfor %}
{% elif groups['k8s_worker_nodes'] is defined and groups['k8s_worker_nodes']|length > 0 and not kubeinit_k8s_disable_masters_schedulable %}
{% for host in groups['k8s_worker_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_worker_nodes'][loop.index - 1]].ansible_host }}:80 check
{% endfor %}
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:80 check
{% endfor %}
{% else %}
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:80 check
{% endfor %}
{% endif %}

frontend k8s4_https_ingress_traffic_fe
    bind *:443
    default_backend k8s4_https_ingress_traffic_be
    mode tcp
    option tcplog

backend k8s4_https_ingress_traffic_be
    balance source
    mode tcp
{% if groups['k8s_worker_nodes'] is defined and groups['k8s_worker_nodes']|length > 0 and kubeinit_k8s_disable_masters_schedulable %}
{% for host in groups['k8s_worker_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_worker_nodes'][loop.index - 1]].ansible_host }}:443 check
{% endfor %}
{% elif groups['k8s_worker_nodes'] is defined and groups['k8s_worker_nodes']|length > 0 and not kubeinit_k8s_disable_masters_schedulable %}
{% for host in groups['k8s_worker_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_worker_nodes'][loop.index - 1]].ansible_host }}:443 check
{% endfor %}
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:443 check
{% endfor %}
{% else %}
{% for host in groups['k8s_master_nodes'] %}
    server      {{ host }} {{ hostvars[groups['k8s_master_nodes'][loop.index - 1]].ansible_host }}:443 check
{% endfor %}
{% endif %}


