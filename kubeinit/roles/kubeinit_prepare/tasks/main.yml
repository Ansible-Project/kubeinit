---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Check to see if the hypervisor facts are set
  ansible.builtin.set_fact:
    hypervisor_facts_set: "{{ hostvars[groups['hypervisor_hosts'][0]].ansible_distribution is defined }}"

- name: We need to gather those facts
  block:

    - name: Gather hypervisor facts
      ansible.builtin.include_tasks: gather_host_facts.yml
      with_items:
        - "{{ groups['hypervisor_hosts'] | list }}"
      loop_control:
        loop_var: cluster_role_item
      vars:
        kubeinit_deployment_node_name: "{{ cluster_role_item }}"

    - name: Check to see if we should stop here
      ansible.builtin.fail:
        msg: "Stopping after 'task-gather-hypervisor-facts'"
      when: kubeinit_stop_after_task is defined and kubeinit_stop_after_task == 'task-gather-hypervisor-facts'

  when: not hypervisor_facts_set

- name: Check to see if we should stop here
  ansible.builtin.fail:
    msg: "Stopping after 'task-prepare-hypervisor'"
  when: kubeinit_stop_after_task is defined and kubeinit_stop_after_task == 'task-prepare-hypervisor'

- name: Add localhost to the local_host group
  ansible.builtin.add_host:
    name: kubeinit-localhost
    group: local_host
    ansible_host: localhost
    ansible_hostname: localhost
    inventory_hostname: localhost

- name: Gather localhost facts
  ansible.builtin.include_tasks: gather_host_facts.yml
  vars:
    kubeinit_deployment_node_name: "kubeinit-localhost"

- name: Prepare groups
  ansible.builtin.include_tasks: prepare_groups.yml

- name: Define group facts
  ansible.builtin.set_fact:
    kubeinit_cluster_name: "{{ groups['kubeinit_cluster_vars'][0] }}"
    kubeinit_bastion_host: "{{ groups['all_hosts'][0] }}"
    kubeinit_ovn_central_host: "{{ groups['all_ovn_hosts'][0] }}"
    kubeinit_services_node: "{{ groups['all_service_nodes'][0] }}"
    kubeinit_first_controller_node: "{{ groups['all_control_plane_nodes'][0] }}"
    kubeinit_controller_count: "{{ groups['all_control_plane_nodes'] | length  }}"
    kubeinit_compute_count: "{{ groups['all_compute_nodes'] | length }}"

- name: Define additional host, node and services facts
  ansible.builtin.set_fact:
    kubeinit_bastion_host_address: "{{ hostvars[kubeinit_bastion_host].ansible_default_ipv4_address }}"
    kubeinit_bastion_host_name: "{{ hostvars[kubeinit_bastion_host].ansible_host }}"
    kubeinit_ovn_central_host_address: "{{ hostvars[kubeinit_ovn_central_host].ansible_default_ipv4_address }}"
    kubeinit_apache_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_bind_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_haproxy_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_nexus_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_nexus_service_hostname: "{{ hostvars[kubeinit_services_node].inventory_hostname }}"
    kubeinit_nfs_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_registry_service_hostname: "{{ hostvars[kubeinit_services_node].inventory_hostname }}"
    kubeinit_registry_service_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_services_provision_address: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_haproxy_service_manager: "{{ hostvars[kubeinit_services_node].ansible_host }}"
    kubeinit_service_user: "root"
    kubeinit_service_user_dir: "/root"
    kubeinit_ingress_hostname: "ingress"
    kubeinit_cluster_hostvars: "{{ hostvars[kubeinit_cluster_name] }}"

- name: Prepare localhost
  ansible.builtin.include_tasks: prepare_localhost.yml

- name: Check to see if we should stop here
  ansible.builtin.fail:
    msg: "Stopping after 'task-prepare-environment'"
  when: kubeinit_stop_after_task is defined and kubeinit_stop_after_task == 'task-prepare-environment'

- name: Download images for libvirt guests
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: "download_cloud_images.yml"
    public: true
  with_items:
    - "{{ groups['all_hosts'] | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"

- name: Cleanup nodes for libvirt guests from previous install
  ansible.builtin.include_role:
    name: "../../roles/kubeinit_libvirt"
    tasks_from: cleanup_hypervisor.yml
    public: true
  with_items:
    - "{{ groups['all_hosts'] | list }}"
  loop_control:
    loop_var: cluster_role_item
  vars:
    kubeinit_deployment_node_name: "{{ cluster_role_item }}"

- name: Check to see if we should stop here
  ansible.builtin.fail:
    msg: "Stopping after 'task-cleanup-hypervisors'"
  when: kubeinit_stop_after_task is defined and kubeinit_stop_after_task == 'task-cleanup-hypervisors'
