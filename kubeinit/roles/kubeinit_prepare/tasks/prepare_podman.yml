---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Install podman if required
  ansible.builtin.package:
    state: present
    name: "podman"

#
# Currently there are two ways of configuring
# the docker.io credentials using the variable
# kubeinit_common_docker_password
#
# If the kubeinit_common_docker_password variable
# is the path of the file containing the password
# we get the password from that file, and in the case
# this path do not exists, then we asume that the
# variable contains the password itself.
#
- name: Check if kubeinit_common_docker_password path exists
  ansible.builtin.stat:
    path: "{{ kubeinit_common_docker_password }}"
  register: docker_password_in_file
  delegate_to: localhost
  when: |
    kubeinit_common_docker_username is defined and
    kubeinit_common_docker_password is defined and
    kubeinit_common_docker_username and
    kubeinit_common_docker_password

- name: Read docker password from file when the variable has the path
  ansible.builtin.slurp:
    src: "{{ kubeinit_common_docker_password }}"
  register: docker_password
  delegate_to: localhost
  no_log: true
  when: |
    kubeinit_common_docker_username is defined and
    kubeinit_common_docker_password is defined and
    kubeinit_common_docker_username and
    kubeinit_common_docker_password and
    docker_password_in_file.stat.exists

- name: Dump docker.io password to a file if the password is in the variable
  ansible.builtin.copy:
    content: "{{ kubeinit_common_docker_password }}"
    dest: /tmp/tmp_docker_io_pass
  delegate_to: localhost
  when: |
    kubeinit_common_docker_username is defined and
    kubeinit_common_docker_password is defined and
    kubeinit_common_docker_username and
    kubeinit_common_docker_password and
    not docker_password_in_file.stat.exists

- name: Read docker password from file when pass is in a variable
  ansible.builtin.slurp:
    src: /tmp/tmp_docker_io_pass
  register: docker_password
  delegate_to: localhost
  no_log: true
  when: |
    kubeinit_common_docker_username is defined and
    kubeinit_common_docker_password is defined and
    kubeinit_common_docker_username and
    kubeinit_common_docker_password and
    not docker_password_in_file.stat.exists

- name: Podman login to docker.io
  containers.podman.podman_login:
    username: "{{ kubeinit_common_docker_username }}"
    password: "{{ docker_password.content | b64decode | trim }}"
    registry: "docker.io"
  no_log: true
  when: |
    kubeinit_common_docker_username is defined and
    kubeinit_common_docker_password is defined and
    kubeinit_common_docker_username and
    kubeinit_common_docker_password

- name: clear any reference to docker password
  ansible.builtin.set_fact:
    docker_password: null
  no_log: true
  when: docker_password_in_file.stat.exists
