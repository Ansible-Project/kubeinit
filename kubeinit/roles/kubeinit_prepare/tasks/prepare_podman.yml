---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Install podman dependencies
  ansible.builtin.package:
    name: "{{ kubeinit_prepare_podman_dependencies }}"
    state: present
  become: true
  become_user: root
  when: _param_install_dependencies | default(true)

- name: Authenticate with dockerhub username/password if defined
  block:

    - name: Set facts for dockerhub secrets
      block:
        - name: Set username_secret
          ansible.builtin.set_fact:
            _results: "{{ _results | combine({'username_secret': omit if (hostvars['kubeinit-secrets'].secrets['dockerhub_username'] | default('') | length == 0) else hostvars['kubeinit-secrets'].secrets['dockerhub_username']}) }}"
        - name: Set password_secret
          ansible.builtin.set_fact:
            _results: "{{ _results | combine({'password_secret': omit if (hostvars['kubeinit-secrets'].secrets['dockerhub_password'] | default('') | length == 0) else hostvars['kubeinit-secrets'].secrets['dockerhub_password']}) }}"
      no_log: true

    - name: Podman login to docker.io
      containers.podman.podman_login:
        username: "{{ _results['username_secret'] | b64decode | trim }}"
        password: "{{ _results['password_secret'] | b64decode | trim }}"
        registry: "docker.io"
      no_log: true
      when: (_results['username_secret'] is defined) and (_results['password_secret'] is defined)

    - name: Clear any reference to dockerhub secrets
      ansible.builtin.set_fact:
        _results: {}
      no_log: true

  vars:
    _results: {}
