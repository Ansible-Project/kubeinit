---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


#
# Define additional groups we will use
#
- name: Create a group to hold the facts for the cluster as a whole
  ansible.builtin.add_host:
    name: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
    group: kubeinit_cluster_vars
    hypervisors: []
    services: []

- name: Add all control plane nodes to the all_control_plane_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_control_plane_nodes
  with_items:
    - "{{ groups['control_plane_nodes'] | list | default([]) }}"
  when: "'control_plane_nodes' in groups"

- name: Add all compute nodes to the all_compute_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_compute_nodes
  with_items:
    - "{{ groups['compute_nodes'] | list | default([]) }}"
  when: "'compute_nodes' in groups"

- name: Add all bootstrap nodes the all_bootstrap_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_bootstrap_nodes
  with_items:
    - "{{ groups['bootstrap_nodes'] | list | default([]) }}"
  when: "'bootstrap_nodes' in groups"

- name: Add all cluster nodes to the all_cluster_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_cluster_nodes
  with_items:
    - "{{ groups['all_control_plane_nodes'] + groups['all_compute_nodes'] + groups['all_bootstrap_nodes'] }}"

- name: Collect all cluster node hypervisors
  ansible.builtin.set_fact:
    all_cluster_hypervisors: "{{ all_cluster_hypervisors | default([]) | union([hypervisor]) }}"
  with_items:
    - "{{ groups['all_cluster_nodes'] }}"
  vars:
    hypervisor: "{{ hostvars[item].target }}"

- name: Set all cluster hypervisors fact
  ansible.builtin.add_host:
    name: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
    hypervisors: "{{ all_cluster_hypervisors }}"

- name: Add all service nodes to the all_service_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_service_nodes
  with_items:
    - "{{ groups['service_nodes'] | list | default([]) }}"
  when: "'service_nodes' in groups"

- name: Collect all service node services
  ansible.builtin.set_fact:
    all_services: "{{ ((all_services | default([])) + services) | unique }}"
  with_items:
    - "{{ groups['all_service_nodes'] }}"
  vars:
    services: "{{ hostvars[item].services.split(',') | list }}"

- name: Set all services cluster fact
  ansible.builtin.add_host:
    name: "{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }}"
    services: "{{ all_services }}"

- name: Add all service and cluster nodes to the all_nodes group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_nodes
  with_items:
    - "{{ groups['all_service_nodes'] + groups['all_cluster_nodes'] }}"

- name: Add all hosts to the all_hosts group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_hosts
  with_items:
    - "{{ groups['hypervisor_hosts'] | list | default([]) }}"

- name: Add all service and cluster nodes to the all_guest_vms group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_guest_vms
  with_items:
    - "{{ groups['all_service_nodes'] + groups['all_cluster_nodes'] }}"

- name: Add all OVN hosts to the all_ovn_hosts group
  ansible.builtin.add_host:
    name: "{{ item }}"
    group: all_ovn_hosts
  with_items:
    - "{{ groups['all_hosts'] }}"
