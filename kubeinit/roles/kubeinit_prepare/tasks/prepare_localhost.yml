---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


#
# Gather information
#
- name: Set localhost IPv4 address fact
  ansible.builtin.set_fact:
    localhost_ipv4_address: "{{ hostvars['kubeinit-localhost']['ansible_default_ipv4']['address'] }}"

#
# Prepare localhost environment
#
- name: Reset local ssh keys
  ansible.builtin.shell: |
    set -o pipefail
    ssh-keygen -R  {{ item }} || true
    ssh-keygen -R  {{ item }}.{{ kubeinit_inventory_cluster_name }}.{{ kubeinit_inventory_cluster_domain }} || true
    ssh-keygen -R  {{ hostvars[item].ansible_host }} || true
  with_items: "{{ groups['all_nodes'] }}"
  args:
    executable: /bin/bash
  register: prepare_reset_keys
  changed_when: "prepare_reset_keys.rc == 0"

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: "/root/.ssh/id_rsa"
    owner: root
    group: root
    regenerate: 'never'
  with_items: "{{ groups['all_hosts'] }}"
  delegate_to: "{{ item }}"

- name: Get root host public key
  ansible.builtin.command: cat /root/.ssh/id_rsa.pub
  register: public_key_content
  changed_when: "public_key_content.rc == 0"
  delegate_to: "{{ kubeinit_bastion_host }}"

- name: Register the public key of the root user from the host
  ansible.builtin.set_fact:
    kubeinit_provision_vms_public_key: "{{ public_key_content.stdout }}"
  with_items:
    - "{{ groups['all_hosts'] }}"
    - localhost
  delegate_to: "{{ item }}"

- name: Ansible_host
  ansible.builtin.debug:
    msg: "{{ kubeinit_bastion_host_address }}"

- name: Add ssh ProxyCommand option for all nodes
  ansible.builtin.add_host:
    name: "{{ hostvars[item].ansible_host }}"
    ansible_ssh_common_args: >-
      {{ ansible_ssh_common_args }} -o ProxyCommand="ssh -W %h:%p -q root@{{ hostvars[kubeinit_bastion_host].ansible_host }}"
  with_items: "{{ groups['all_nodes'] }}"
  when: kubeinit_bastion_host_address not in localhost_ipv4_address

- name: Experimental warning
  ansible.builtin.debug:
    msg:
      - '|-------------------------------------------------------|'
      - '| Deploying in multiple hosts is experimental, parts of |'
      - '| the deployment might be broken or some distributions  |'
      - '| might not work as expected.                           |'
      - '|-------------------------------------------------------|'
  when: (groups['all_hosts'] | length > 1)
