---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


#
# Make sure the mount of RAM if enough for all machines
#

- name: Get hypervisor total RAM
  ansible.builtin.shell: |
    set -o pipefail
    free --kilo  | grep ^Mem | tr -s ' ' | cut -d ' ' -f 2
  register: kubeinit_validations_libvirt_total_ram
  with_items:
    - "{{ groups['hypervisor_nodes'] | list }}"
  delegate_to: "{{ item }}"
  changed_when: "kubeinit_validations_libvirt_total_ram.rc == 0"
  tags:
    - provision_libvirt

- name: debug
  ansible.builtin.debug:
    var: kubeinit_validations_libvirt_total_ram
  tags:
    - provision_libvirt

- name: Define the hypervisors ram free space dictionary
  ansible.builtin.set_fact:
    kubeinit_validations_hypervisors_free_ram: "{{ kubeinit_validations_hypervisors_free_ram|default([]) | combine( {item.item: item.stdout|int} ) }}"
  with_items: "{{ kubeinit_validations_libvirt_total_ram.results }}"

- name: debug
  ansible.builtin.debug:
    var: kubeinit_validations_libvirt_total_ram
  tags:
    - provision_libvirt


- name: Get the total inventory ram usage
  ansible.builtin.set_fact:
    kubeinit_validations_libvirt_ram_usage: "{{ kubeinit_validations_libvirt_ram_usage|default({})| combine( {item: {'id': item, 'ram': hostvars[item].ram|int, 'target': hostvars[item].target} } ) }}"
  with_items: "{{ groups['all_nodes'] }}"
  tags:
    - provision_libvirt

- name: debug
  ansible.builtin.debug:
    var: kubeinit_validations_libvirt_ram_usage
  tags:
    - provision_libvirt

- name: Set combined ram requirement per hypervisor
  ansible.builtin.set_fact:
    kubeinit_validations_libvirt_combined_ram_usage: >-
      {{ kubeinit_validations_libvirt_combined_ram_usage | default({})
        | combine({item.value.target: []
        + [{
            'ram': item.value.ram,
            'id': item.value.id
          }]
        + kubeinit_validations_libvirt_combined_ram_usage[item.value.target] | default([]) })
      }}
  with_dict: "{{ kubeinit_validations_libvirt_ram_usage }}"
  tags:
    - provision_libvirt

- name: debug
  ansible.builtin.debug:
    var: kubeinit_validations_libvirt_combined_ram_usage
  tags:
    - provision_libvirt

- name: Set the summarized ram usage per hypervisor
  ansible.builtin.set_fact:
    kubeinit_validations_libvirt_summarized_ram_usage: "{{ kubeinit_validations_libvirt_summarized_ram_usage|default([]) | combine( {item: my_attribute} ) }}"
  vars:
    my_attribute: "{{ kubeinit_validations_libvirt_combined_ram_usage[item] | map(attribute='ram') | list | sum }}"
  with_items: "{{ kubeinit_validations_libvirt_combined_ram_usage.keys() | list }}"
  tags:
    - provision_libvirt

- name: debug
  ansible.builtin.debug:
    var: kubeinit_validations_libvirt_summarized_ram_usage
  tags:
    - provision_libvirt

- name: debug
  ansible.builtin.debug:
    var: item
  with_dict: "{{ kubeinit_validations_hypervisors_free_ram }}"
  tags:
    - provision_libvirt

- name: Make sure there is enough free space
  ansible.builtin.assert:
    that:
      - kubeinit_validations_hypervisors_free_ram[item.key]|int > item.value|float * 1.1
    msg: "It seems there is not enough ram space (Required: {{ kubeinit_validations_libvirt_summarized_ram_usage }} Available: {{ kubeinit_validations_hypervisors_free_ram }})"
  with_dict: "{{ kubeinit_validations_libvirt_summarized_ram_usage }}"
  tags:
    - provision_libvirt
