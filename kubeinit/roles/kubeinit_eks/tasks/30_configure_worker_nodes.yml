---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Configure the worker nodes
  block:
    - name: Storing the join cluster command token.
      copy:
        content: "{{ eks_master_kubeadm_init_output }}"
        dest: ~/eks_token
        mode: '0644'
      when: groups['eks_master_nodes'] | length > 1

    - name: Install root public from service node in worker nodes
      shell: |
       echo "{{ kubeinit_provision_service_public_key }}" >> /root/.ssh/authorized_keys
      changed_when: false

    # Push the certificates from the registry to the worker nodes if its enabled
    - name: Push the certificates from the registry to the worker nodes
      shell: |
        set -e
        scp -o StrictHostKeyChecking=no /etc/pki/ca-trust/source/anchors/* {{ kubeinit_deployment_node_name }}:/etc/pki/ca-trust/source/anchors/
      register: install_all_certs_in_workers
      changed_when: "install_all_certs_in_workers.rc == 0"
      become: true
      when: kubeinit_registry_enabled | bool
      delegate_to: "{{ groups['eks_service_nodes'][0] }}"

    - name: Insert the local registry auth details
      shell: |
        set -e

        mkdir -p .docker
        cat << EOF > .docker/config.json
        {
          "auths": {
            "{{ kubeinit_registry_uri }}": {
              "auth": "{{ disconnected_registry_up | b64encode }}",
              "email": "{{ kubeinit_registry_email }}"
            }
          },
          "HttpHeaders": {
            "User-Agent": "Docker-Client/18.09.7 (linux)"
          }
        }
        EOF
      register: insert_worker_local_registry_auth
      changed_when: "insert_worker_local_registry_auth.rc == 0"
      become: true
      when: kubeinit_registry_enabled | bool

    - name: Update the CA certs files
      command: update-ca-trust extract
      register: update_master_ca_trust_files
      changed_when: "update_master_ca_trust_files.rc == 0"
      become: true
      when: kubeinit_registry_enabled | bool

    - name: Modprobe ip forward
      shell: |
        modprobe br_netfilter
        echo '1' > /proc/sys/net/ipv4/ip_forward
        mkdir -p /proc/sys/net/bridge/
        echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
        sysctl -p
      changed_when: false
      when: groups['eks_worker_nodes'] | length > 0

    - name: Joining worker nodes with kubernetes master
      shell: |
       kubeadm reset -f || true
       cat ~/eks_token > out.sh
       sh out.sh
      changed_when: false
      when: groups['eks_worker_nodes'] | length > 0

    - name: Label node
      shell: |
       kubectl label node {{ kubeinit_deployment_node_name }}.{{ kubeinit_inventory_cluster_domain }} node-role.kubernetes.io/worker=
      changed_when: false
      when: groups['eks_worker_nodes'] | length > 0
      # The kubeconfig file is in the master nodes otherwise we can not relabel
      delegate_to: "{{ groups['eks_master_nodes'][0] }}"

  delegate_to: "{{ kubeinit_deployment_node_name }}"
  tags:
    - provision_libvirt
