---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Fetch the kubeconfig from the first controller node
  ansible.builtin.slurp:
    src: ~/.kube/config
  register: kubeinit_eks_cluster_kubeconfig
  delegate_to: "{{ kubeinit_first_controller_node }}"

- name: Create kube directory
  ansible.builtin.file:
    path: ~/.kube
    state: directory
    mode: '0644'
  delegate_to: "{{ kubeinit_provision_service_node }}"

- name: Storing the master kubeconfig to the provision services machine.
  ansible.builtin.copy:
    content: "{{ kubeinit_eks_cluster_kubeconfig.content | default('Empty file') | b64decode }}"
    dest: ~/.kube/config
    mode: '0644'
  delegate_to: "{{ kubeinit_provision_service_node }}"

- name: Label worker nodes
  ansible.builtin.shell: |
    kubectl label node {{ item }}.{{ kubeinit_cluster_fqdn }} node-role.kubernetes.io/worker=
  args:
    executable: /bin/bash
  changed_when: false
  with_items:
    - "{{ groups['all_compute_nodes'] | list }}"
  delegate_to: "{{ kubeinit_provision_service_node }}"

- name: Deploy EKS manifests.
  ansible.builtin.shell: |
    kubectl apply -f https://distro.eks.amazonaws.com/crds/releases.distro.eks.amazonaws.com-v1alpha1.yaml
    kubectl apply -f https://distro.eks.amazonaws.com/kubernetes-1-18/kubernetes-1-18-eks-1.yaml
    kubectl get release kubernetes-1-18-eks-1
    kubectl get release kubernetes-1-18-eks-1 -o yaml
  args:
    executable: /bin/bash
  changed_when: false
  delegate_to: "{{ kubeinit_provision_service_node }}"

#
# Configure NFS
#
- block:
    - name: Configure NFS
      ansible.builtin.include_role:
        name: kubeinit.kubeinit.kubeinit_nfs
        public: true
      when: "'nfs' in kubeinit_cluster_hostvars.services"
  vars:
    kubeinit_deployment_node_name: "{{ kubeinit_provision_service_node }}"
  delegate_to: "{{ kubeinit_deployment_node_name }}"
