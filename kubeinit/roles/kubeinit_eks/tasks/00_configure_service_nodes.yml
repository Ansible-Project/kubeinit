---
# Copyright kubeinit.com
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Configure the service node
  block:
    #
    # eks repos
    #
    - name: Remove repo before adding it
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: absent

    - name: Creating a repository file for Kubernetes
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        mode: '0644'

    - name: Adding repository details in Kubernetes repo file.
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        block: |
         [kubernetes]
         name=Kubernetes
         baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
         enabled=1
         gpgcheck=1
         repo_gpgcheck=1
         gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: update packages
      ansible.builtin.yum:
        name: "*"
        state: latest
        use_backend: dnf
      register: update_packages

    - name: Reboot immediately after the package update
      ansible.builtin.shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: update_packages is changed

    - name: Wait for the reboot to complete if there was a change.
      ansible.builtin.wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      when: update_packages is changed

    - name: install common requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_eks_common_dependencies }}"
        state: present
        use_backend: dnf

    - name: Add the local DNS server as a local resolver
      ansible.builtin.lineinfile:
        path: /etc/resolv.conf
        line: "nameserver {{ hostvars[groups['all'] | map('regex_search','^.*service.*$') | select('string') | list | first].ansible_host }}"
        insertbefore: nameserver.*

    #
    # Kubernetes config
    #

    - name: install requirements for kubectl
      ansible.builtin.package:
        name:
          - "kubectl-{{ kubeinit_eks_kubernetes_version }}"
        state: present

    - name: install services requirements
      ansible.builtin.yum:
        name: "{{ kubeinit_eks_service_dependencies }}"
        state: present
        use_backend: dnf

    #
    # Configure local registry
    #

    - name: "Get the required container images"
      ansible.builtin.shell: |
        set -o pipefail
        wget https://raw.githubusercontent.com/aws/eks-distro/main/development/pull-all.sh
        cat pull-all.sh | grep 'docker pull' | cut -d' ' -f3 > ~/kubeinit_deployment_images.txt
      args:
        executable: /bin/bash
      register: render_images_list
      changed_when: "render_images_list.rc == 0"

    - name: Configure a local container image registry
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_registry
        tasks_from: main
      vars:
        kubeinit_registry_container_engine: podman
      when: kubeinit_registry_enabled|bool

    #
    # Configure bind
    #

    - name: Configure Bind
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_bind
        tasks_from: main

    #
    # Configure HAproxy
    #

    - name: Configure HAProxy
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_haproxy
        tasks_from: main

    #
    # Configure httpd
    #

    - name: Configure Apache
      # delegate_facts: true
      ansible.builtin.import_role:
        name: ../../roles/kubeinit_apache
        tasks_from: main

    #
    # Include the install configuration
    #

    - name: "Render root keys in the service node"
      ansible.builtin.shell: |
        cd
        mkdir ~/.ssh
        ssh-keygen -t rsa -N "" -f .ssh/id_rsa <<< y
      register: render_service_keys
      changed_when: "render_service_keys.rc == 0"

    - name: get root service machine public key
      ansible.builtin.command: cat /root/.ssh/id_rsa.pub
      register: public_key_service_content
      changed_when: "public_key_service_content.rc == 0"

    # TODO:FIXME: it should be like public_key_service_content.results.stdout in all the
    # other roles, otherwise we are getting the stdout, error and other wrong data.
    - name: register the public key of the root service machine public key
      ansible.builtin.set_fact:
        kubeinit_provision_service_public_key={{ public_key_service_content.stdout }}

    #- name: Autoload kubeconfig
    #  ansible.builtin.shell: |
    #    echo "export KUBECONFIG=~/install_dir/auth/kubeconfig" >> ~/.bashrc
    #  delegate_to: "{{ cluster_node }}"
    #  with_items: "{{ groups['eks_service_nodes'] }}"
    #  loop_control:
    #    loop_var: cluster_node
    #  ignore_errors: yes
    #  register: autoload
    #  changed_when: "autoload.rc == 0"

  delegate_to: "{{ hostvars[kubeinit_deployment_node_name].ansible_host }}"
  tags:
    - provision_libvirt
