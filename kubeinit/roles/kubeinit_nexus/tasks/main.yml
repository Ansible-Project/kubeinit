---
# Copyright 2020 KubeInit.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Create Nexus folders
  ansible.builtin.file:
    path: "{{ item | safe | trim }}"
    state: directory
    recurse: yes
    mode: '0755'
  with_items: "{{ kubeinit_nexus_directories }}"

- name: Create a podman container to serve nexus
  containers.podman.podman_container:
    name: "{{ kubeinit_nexus_pod_name }}"
    image: docker.io/sonatype/nexus3:3.30.0
    pod: "{{ kubeinit_services_pod_name }}"
    state: stopped
    network: host
    volumes:
      - "/var/kubeinit/nexus:/nexus-data:Z"
  register: nexus_podman_container_info

- name: Setting Podman facts about the container that will run nexus
  ansible.builtin.set_fact:
    container_nexus_name: "{{ nexus_podman_container_info.container.Name }}"
    container_nexus_pidfile: "{{ nexus_podman_container_info.container.ConmonPidFile }}"

- name: Ensure user specific systemd instance are persistent
  ansible.builtin.command: |
    /usr/bin/loginctl enable-linger {{ kubeinit_service_user }}
  register: systemd_instance_persist
  changed_when: "systemd_instance_persist.rc == 0"

- name: Create systemd user directory
  ansible.builtin.file:
    path: "{{ kubeinit_service_user_dir }}/.config/systemd/user"
    state: directory
    owner: "{{ kubeinit_service_user }}"
    group: "{{ kubeinit_service_user }}"
    mode: '0775'

- name: Copy the podman systemd service file
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Podman container-nexus.service
      [Service]
      Restart=on-failure
      ExecStart=/usr/bin/podman start {{ container_nexus_name }}
      ExecStop=/usr/bin/podman stop -t 10 {{ container_nexus_name }}
      KillMode=none
      Type=forking
      PIDFile={{ container_nexus_pidfile }}
      [Install]
      WantedBy=default.target
    dest: "{{ kubeinit_service_user_dir }}/.config/systemd/user/container-nexus.service"
    owner: "{{ kubeinit_service_user }}"
    group: "{{ kubeinit_service_user }}"
    mode: '0644'

- name: Reload systemd service
  ansible.builtin.systemd:
    daemon_reexec: yes
    scope: user
  environment:
    DBUS_SESSION_BUS_ADDRESS: "{{ ansible_env.DBUS_SESSION_BUS_ADDRESS|default('unix:path=/run/user/' +  ansible_effective_user_id|string + '/bus') }}"

- name: Enable container-nexus.service
  ansible.builtin.systemd:
    name: container-nexus
    enabled: yes
    scope: user
  environment:
    DBUS_SESSION_BUS_ADDRESS: "{{ ansible_env.DBUS_SESSION_BUS_ADDRESS|default('unix:path=/run/user/' +  ansible_effective_user_id|string + '/bus') }}"

- name: Start container-nexus.service
  ansible.builtin.systemd:
    name: container-nexus
    state: started
    scope: user
  environment:
    DBUS_SESSION_BUS_ADDRESS: "{{ ansible_env.DBUS_SESSION_BUS_ADDRESS|default('unix:path=/run/user/' +  ansible_effective_user_id|string + '/bus') }}"
