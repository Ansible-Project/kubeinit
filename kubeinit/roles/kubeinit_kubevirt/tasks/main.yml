---
# Copyright 2020 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# "kubeinit_kubevirt" will search for and load any operating system variable file

# found within the "vars/" path. If no OS files are found the task will skip.
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - skip: true
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- name: "Install semanage"
  shell: |
    sudo rpm-ostree install policycoreutils-python-utils
  register: semanage_install
  changed_when: "semanage_install.rc == 0"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['okd_worker_nodes'] }}"
  tags:
    - kubeinit_kubevirt

- name: Disable SELinux
  selinux:
    state: disabled
  delegate_to: "{{ item }}"
  with_items: "{{ groups['okd_worker_nodes'] }}"
  tags:
    - kubeinit_kubevirt

- name: Reboot guests and wait for it to restart
  reboot:
    msg: "Reboot initiated after installing packagese"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami
  delegate_to: "{{ item }}"
  with_items: "{{ groups['okd_worker_nodes'] }}"
  tags:
    - kubeinit_kubevirt

- name: "Install KubeVirt"
  shell: |
    set -o pipefail
    export KUBECONFIG=~/install_dir/auth/kubeconfig;
    # On other OS you might need to define it like
    export KUBEVIRT_VERSION="v0.32.0-rc.2"
    # On Linux you can obtain it using 'curl' via:
    export KUBEVIRT_VERSION=$(curl -s https://api.github.com/repos/kubevirt/kubevirt/releases | grep tag_name | grep -v -- - | sort -V | tail -1 | awk -F':' '{print $2}' | sed 's/,//' | xargs)
    echo $KUBEVIRT_VERSION
    kubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-operator.yaml
    kubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-cr.yaml
    curl -L -o virtctl \
        https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-linux-amd64
    chmod +x virtctl
  args:
    executable: /bin/bash
  register: cmd_res
  changed_when: "cmd_res.rc == 0"
  delegate_to: "{{ cluster_node }}"
  with_items: "{{ groups['okd_service_nodes'] }}"
  loop_control:
    loop_var: cluster_node
  tags:
    - kubeinit_kubevirt
