---
name: distro_test
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt update -y
        sudo apt install jq -y
        sudo apt-get remove ansible -y
        sudo python3 -m pip uninstall ansible
        sudo python3 -m pip install ansible ansible-base
        sudo locale-gen en_US.UTF-8
        sudo dpkg-reconfigure locales
        sudo apt install build-essential findutils -y
        sudo apt-get --purge autoremove python3-pip
        sudo apt install python3-pip
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install --upgrade virtualenv
        sudo python3 -m pip install --upgrade setuptools
        sudo python3 -m pip install -r ./test-requirements.txt
    - name: Check SSH config
      run: |
        cat > sshd_config <<EOF
          SyslogFacility AUTHPRIV
          PermitRootLogin yes
          AuthorizedKeysFile	.ssh/authorized_keys
          PasswordAuthentication yes
          ChallengeResponseAuthentication no
          UsePAM yes
          UseDNS no
          X11Forwarding no
          PrintMotd no
        EOF
        sudo mv sshd_config /etc/ssh/sshd_config
        sudo systemctl restart ssh
    - name: Create ssh key
      run: >
        ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
    - name: Add key to auth file
      run: >
        cat ~/.ssh/id_rsa.pub | tee -a ~/.ssh/authorized_keys
    - name: Ensure the owner of the key is correct
      run: |
        chmod 600 ~/.ssh/authorized_keys
        chmod 700 ~/.ssh
        sudo chmod -c 0755 ~/
        ls -la ~/.ssh
    - name: Prepare connection to nyctea
      run: |
        sudo echo "127.0.0.1 nyctea.local nyctea localhost" | sudo tee -a /etc/hosts
    - name: Test SSH connection to localhost/nyctea
      run: >
        echo "Test to nyctea"
        ssh -i ~/.ssh/id_rsa -o BatchMode=yes -o StrictHostKeyChecking=no $(whoami)@nyctea
        echo "Test to localhost"
        ssh -i ~/.ssh/id_rsa -o BatchMode=yes -o StrictHostKeyChecking=no $(whoami)@localhost
    - name: Adjust CDK inventory
      run: |
        sed -i -E "s/.*-controller-02/#-controller-02/g" ./hosts/cdk/inventory
        sed -i -E "s/.*-controller-03/#-controller-03/g" ./hosts/cdk/inventory
        sed -i -E "s/.*-compute-01/#-compute-01/g" ./hosts/cdk/inventory
        sed -i -E "s/.*-compute-02/#-compute-02/g" ./hosts/cdk/inventory
        sed -i -E "/cdk-service-01 ansible_host/ s/type=virtual/type=container/g" ./hosts/cdk/inventory
        sed -i '/^\[control_plane_nodes:vars\]$/,/^\[/ s/^disk=25G/disk=10G/' ./hosts/cdk/inventory
        sed -i '/^\[control_plane_nodes:vars\]$/,/^\[/ s/^ram=25165824/ram=3165824/' ./hosts/cdk/inventory
        sed -i '/^\[control_plane_nodes:vars\]$/,/^\[/ s/^vcpus=8/vcpus=1/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^disk=150G/disk=10G/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^ram=12582912/ram=3165824/' ./hosts/cdk/inventory
        sed -i '/^\[service_nodes:vars\]$/,/^\[/ s/^vcpus=8/vcpus=1/' ./hosts/cdk/inventory
    - name: Run the deployment
      run: |
        # Install the Ansible collection requirements
        ansible-galaxy collection install --force -r kubeinit/requirements.yml
        # Run the playbook
        ansible-playbook \
            -v \
            -e kubeinit_stop_after_task='task-run-validations' \
            -e kubeinit_libvirt_create_cloud_user=true \
            -e kubeinit_inventory_hosted_deployment=true \
            -i ./hosts/cdk/inventory \
            ./playbooks/cdk.yml
